System.register(['angular2/angular2'], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = (this && this.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var angular2_1;
    var ButtonCheckbox;
    return {
        setters:[
            function (angular2_1_1) {
                angular2_1 = angular2_1_1;
            }],
        execute: function() {
            ButtonCheckbox = (function () {
                function ButtonCheckbox(cd) {
                    this.cd = cd;
                    this.state = false;
                    this.onChange = function (_) { };
                    this.onTouched = function () { };
                    // hack !
                    cd.valueAccessor = this;
                }
                ButtonCheckbox.prototype.onInit = function () {
                    this.toggle(this.trueValue === this.value);
                };
                Object.defineProperty(ButtonCheckbox.prototype, "trueValue", {
                    get: function () {
                        return typeof this.btnCheckboxTrue !== 'undefined' ? this.btnCheckboxTrue : true;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ButtonCheckbox.prototype, "falseValue", {
                    get: function () {
                        return typeof this.btnCheckboxFalse !== 'undefined' ? this.btnCheckboxFalse : false;
                    },
                    enumerable: true,
                    configurable: true
                });
                ButtonCheckbox.prototype.toggle = function (state) {
                    this.state = state;
                    this.value = this.state ? this.trueValue : this.falseValue;
                };
                // view -> model
                ButtonCheckbox.prototype.onClick = function () {
                    this.toggle(!this.state);
                    this.cd.viewToModelUpdate(this.value);
                };
                // ControlValueAccessor
                // model -> view
                ButtonCheckbox.prototype.writeValue = function (value) {
                    this.state = this.trueValue === value;
                    this.value = value;
                };
                ButtonCheckbox.prototype.registerOnChange = function (fn) {
                    this.onChange = fn;
                };
                ButtonCheckbox.prototype.registerOnTouched = function (fn) {
                    this.onTouched = fn;
                };
                ButtonCheckbox = __decorate([
                    angular2_1.Directive({
                        selector: '[btn-checkbox][ng-model]',
                        properties: ['btnCheckboxTrue', 'btnCheckboxFalse'],
                        host: {
                            '(click)': 'onClick()',
                            '[class.active]': 'state'
                        }
                    }),
                    __param(0, angular2_1.Self()), 
                    __metadata('design:paramtypes', [(typeof (_a = typeof angular2_1.NgModel !== 'undefined' && angular2_1.NgModel) === 'function' && _a) || Object])
                ], ButtonCheckbox);
                return ButtonCheckbox;
                var _a;
            })();
            exports_1("ButtonCheckbox", ButtonCheckbox);
        }
    }
});
//# sourceMappingURL=button-checkbox.js.map